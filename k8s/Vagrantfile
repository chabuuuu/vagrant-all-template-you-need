Vagrant.configure(2) do |k8s_lab|                 # khai báo máy ảo

  k8s_lab.vm.define "controlPlaneNode" do |controlPlaneNode|
    controlPlaneNode.vm.provider "libvirt" do |libvirt|        # Máy ảo dùng libvirt và cấu hình tài nguyên
      libvirt.cpus = 2                                 # cấp 2 core CPU
      libvirt.memory = "2096"                          # cấp 2GB bộ nhớ
    end                                            # kết thúc cấu hình tài nguyên 

    controlPlaneNode.vm.box = 'generic/ubuntu2004'              # Sử dụng Box generic/ubuntu2004 tạo máy ảo được lấy từ vagrant cloud
    controlPlaneNode.vm.network "private_network", ip: "192.168.122.22"
    controlPlaneNode.vm.hostname = "controlPlaneNode"

  end

  k8s_lab.vm.define "workerNodeA" do |workerNodeA|
    workerNodeA.vm.provider "libvirt" do |libvirt|
      libvirt.cpus = 2
      libvirt.memory = "2096"
    end

    workerNodeA.vm.box = 'generic/ubuntu2004'
    workerNodeA.vm.network "private_network", ip: "192.168.122.23"
    workerNodeA.vm.hostname = "workerNodeA"

  end

  k8s_lab.vm.define "workerNodeB" do |workerNodeB|
    workerNodeB.vm.provider "libvirt" do |libvirt|
      libvirt.cpus = 2
      libvirt.memory = "2096"
    end

    workerNodeB.vm.box = 'generic/ubuntu2004'
    workerNodeB.vm.network "private_network", ip: "192.168.122.24"
    workerNodeB.vm.hostname = "workerNodeB"

  end
  
  k8s_lab.vm.provision "shell", inline: <<-SHELL    

    # Đặt mật khẩu tài khoản root là 'password' và cho phép đăng nhập ssh
    echo "root:password" | chpasswd
    sed -i 's/#PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config
    systemctl reload sshd

    # Install nginx
    sudo apt-get update
    sudo apt-get install -y nginx
    sudo systemctl enable nginx
    sudo systemctl start nginx

    # Tải các module cần thiết
    cat <<EOF | sudo tee /etc/modules-load.d/containerd.conf
    overlay
    br_netfilter
EOF

    sudo modprobe overlay
    sudo modprobe br_netfilter

    # Cấu hình sysctl cho networking
    cat <<EOF | sudo tee /etc/sysctl.d/99-kubernetes-cri.conf
    net.bridge.bridge-nf-call-iptables  = 1
    net.ipv4.ip_forward                 = 1
    net.bridge.bridge-nf-call-ip6tables = 1
EOF

    sudo sysctl --system

    # Cài đặt containerd
    sudo apt-get install containerd -y

    # Tạo file cấu hình mặc định cho containerd
    sudo mkdir -p /etc/containerd
    sudo containerd config default | sudo tee /etc/containerd/config.toml

    # Chỉnh sửa file cấu hình để sử dụng systemd cgroup driver
    # Đây là bước quan trọng để K8s và containerd hoạt động trơn tru
    sudo sed -i 's/SystemdCgroup = false/SystemdCgroup = true/g' /etc/containerd/config.toml

    # Khởi động lại và bật containerd
    sudo systemctl restart containerd
    sudo systemctl enable containerd

    sudo swapoff -a
    sudo sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab

    # Cài đặt các gói phụ thuộc
    sudo apt-get install -y apt-transport-https ca-certificates curl gpg

    sudo mkdir -p -m 755 /etc/apt/keyrings

    # Thêm GPG key của Google
    curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.33/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg

    # Thêm repository của Kubernetes
    echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.33/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list

    # Cài đặt K8s tools
    sudo apt-get update
    sudo apt-get install -y kubelet kubeadm kubectl
    sudo apt-mark hold kubelet kubeadm kubectl

  SHELL

end
